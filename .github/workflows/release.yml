name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"

env:
  PLUGIN_NAME: obsidian-better-command-palette

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16.x"
          cache: 'npm'

      - name: Check Node.js and npm versions
        run: |
          node --version
          npm --version
        continue-on-error: false

      - name: Install dependencies
        run: npm ci
        continue-on-error: false

      - name: Ensure lockfile is up to date
        run: |
          npm install
          git diff --exit-code package-lock.json || (echo "package-lock.json was out of sync. Please commit the updated lockfile." && exit 1)
        continue-on-error: false

      - name: Lint code
        run: |
          if [ -f package.json ] && npm run | grep -q 'lint'; then npm run lint; else echo "No lint script"; fi
        continue-on-error: false

      - name: Run tests
        run: |
          if [ -f package.json ] && npm test -- --ci; then echo "Tests passed"; else echo "No tests or tests failed"; fi
        continue-on-error: false

      - name: Build
        run: |
          npm run build
          mkdir -p ${{ env.PLUGIN_NAME }}
          cp dist/main.js dist/manifest.json dist/styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
        continue-on-error: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_NAME }}-build
          path: |
            ${{ env.PLUGIN_NAME }}.zip
            dist/main.js
            dist/manifest.json
            dist/styles.css

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          files: |
            ${{ env.PLUGIN_NAME }}.zip
            dist/main.js
            dist/manifest.json
            dist/styles.css
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
